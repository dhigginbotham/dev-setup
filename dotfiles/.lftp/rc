########## SETTINGS 

# On startup, lftp executes ~/.lftprc and ~/.lftp/rc. You can place aliases and 'set' commands 
# there. Some people prefer to see full protocol debug, use 'debug' to turn the debug on.

# Certain commands and settings take a time interval parameter. It has the format Nx[Nx...], where N is time amount
# (floating point) and x is time unit: d - days, h - hours, m - minutes, s - seconds. Default unit is second. E.g.
# 5h30m or 5.5h. Also the interval can be 'infinity', 'inf', 'never', 'forever' - it means infinite interval. E.g.
# 'sleep forever' or 'set dns:cache-expire never'.

# The name of a variable can be abbreviated unless it becomes ambiguous. The prefix before ':' can be omitted too. 
# You can set one variable several times for different closures, and thus you can get a particular settings for 
# particular state. The closure is to be specified after variable name separated with slash '/'.

# The closure for 'dns:', 'net:', 'ftp:', 'http:', 'hftp:' domain variables is currently just the host name as you
# specify it in the 'open' command (with some exceptions where closure is meaningless, e.g. dns:cache-size). For 
# some 'cmd:' domain variables the closure is current URL without path. For other variables it is not currently 
# used. See examples in the sample lftp.conf.

# Boolean settings can be one of (true, on, yes, 1, +) for a True value or one of (false, off, no, 0, -) for a False 
# value.

# There is also a system-wide startup file in /etc/lftp.conf. It can be in different directory, see FILES section.

# Number of jobs run in parallel in non-interactive mode. For example, this may be useful for scripts with 
# multiple 'get' commands. Note that setting this to a value greater than 1 changes conditional execution behaviour, 
# basically makes it inconsistent. 
set cmd:parallel 1

# Number of jobs run in parallel in a queue.
set cmd:queue-parallel 1

# if true, lftp resolves host name immediately in 'open' command. It is also possible to skip the check for a 
# single 'open' command if '&' is given, or if ^Z is pressed during the check. 
set cmd:verify-host no

# local character set. It is set from current locale initially.
set file:charset utf-8

# the character set used by fish server in requests, replies and file listings. Default is empty which means the
# same as local.
set fish:charset utf-8

# sets passive ftp mode. This can be useful if you are behind a firewall or a dumb masquerading router. In passive
# mode lftp uses PASV command, not the PORT command which is used in active mode. In passive mode lftp itself makes
# the data connection to the server; in active mode the server connects to lftp for data transfer. Passive mode is 
# the default.
set ftp:passive-mode yes

# if true, try to negotiate SSL connection with ftp server for non-anonymous access. Default is true. This and 
# other ssl settings are only available if lftp was compiled with an ssl/tls library. 
set ftp:ssl-allow yes

# if true, lftp loads ssl:key-file for protected data connection too. When false, it does not, and the server can 
# match data and control connections by session ID. Default is true. 
# if true, refuse to send password in clear when server does not support SSL. Default is false.
set ftp:ssl-force yes

# if true, request ssl connection for data transfers. This is cpu-intensive but provides privacy. Default is false.
set ftp:ssl-protect-data yes

# if true, request ssl connection for data transfer between two ftp servers in FXP mode. CPSV or SSCN command will 
# be used in that case. If ssl connection fails for some reason, lftp would try unprotected FXP transfer unless 
# ftp:ssl-force is set for any of the two servers. Default is false. 
set ftp:ssl-protect-fxp yes

# if true, request ssl connection for file list transfers. Default is true.
set ftp:ssl-protect-list yes

# if true, lftp will try to set up direct connection between two ftp servers.
# set ftp:use-fxp no

# verify that data connection comes from the network address of control connection peer. This can possibly prevent 
# data connection spoofing which can lead to data corruption. Unfortunately, this can fail for certain ftp servers 
# with several network interfaces, when they do not set outgoing address on data socket, so it is disabled by 
# default. 
set ftp:verify-address yes

# verify that data connection has port 20 (ftp-data) on its remote end. This can possibly prevent data connection 
# spoofing by users of remote host. Unfortunately, too many windows and even unix ftp servers forget to set proper 
# port on data connection, thus this check is off by default. 
set ftp:verify-port yes

# if true, mirror will start processing of several directories in parallel when it is in parallel mode. Otherwise, 
# it will transfer files from a single directory before moving to other directories. 
# set mirror:parallel-directories (boolean)

# specifies number of parallel transfers mirror is allowed to start. Default is 1. You can override it with 
# --parallel option. 
# set mirror:parallel-transfer-count (number)

# specifies -n option for pget command used to transfer every single file under mirror. Default is 1 which disables pget. 
set mirror:use-pget-n 10

# maximum number of concurrent connections to the same site. 0 means unlimited.
set net:connection-limit 4

# default number of chunks to split the file to in pget.
set pget:default-n 10 
